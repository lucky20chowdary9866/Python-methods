# -*- coding: utf-8 -*-
"""python course

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yP8iUwfUe5T-zTZangtSG6O3z6j1SRmn
"""

l='ramlakshitha'
l.upper()

25<<2

8>>2

import keyword
print(keyword.kwlist)

l='ramLakshiTha'
l.lower()

l='ramlakshitha'
l.swapcase()

l='ram lakshitha'
l.title()

l='ramlakshitha'
l.capitalize()

l=' ramlakshitha'
l.split()

l='ramlakshitha'
l.count('a')

l.index('a')

l.find('n')

sorted(l,reverse=True)

'm'.isalpha()

'4'.isdigit()

's@5'.isalnum()

l.rindex('a')

l.rfind('a')

l.startswith('n')

a=10
b=20
print(f'{a} +{b}={a+b}')

l.strip('a')

l=[2,4,6,8]
l.append(5)
l

l=[2,4,6,8]
l.insert(2,4)
l

l=[2,4,6,8]
l.extend('abc')
l

l=[2,4,6]
l.remove(2)
l

l.pop()

l.clear()
l

l=[2,4,6,8]
l.sort()
l

l=[2,4,6,8,2,2]
l.count(2)

L=['2','4','6','8']
'$'.join(L)

l=[2,4,6,8]
l.join(l)

l=[2,4,6,8,2,4,2,2]
l.index(4,2,7)

l=[2,4,6,8,2,4,2,2]
l.rindex(4)

a=20
id(a)

c=20
id(c)

a=complex()
a

a=str()
a

100<<2

8>>2

8<<2

25>>2

20>>2

100>>2

100<<2

8<<2

8>>2

8^4

bin(100)

l=[2,3,4,5]
l.append(10)
l

l.insert(0,20)
l

l.extend('ab')
l

l.extend(4)
l

l.extend((4,))
l

l.extend({'a':4})
l

l.remove('a')
l

l.pop()

l.pop(0)

l.pop(15)

l.clear()
l

l=[3,5,7,2,1,9]
l.sort()
l

l=[3,5,7,2,1,9]
l.sort(reverse=True)
l

l.count(2)

l=['1','2','5','8']
'$'.join(l)

l.index('2')

l.reverse()
l

l.copy()

s={2,6,9,10}
s.add(12)
s

s.update('1233')
s

s.update([10,20])
s

s.update({'100':25})
s

s.remove('2')
s

s.remove('30')

s.discard('420')
s

s.clear()
s

a={2,6,9,5}
b={8,3,2,5}
a.union(b)

a={2,6,9,5}
b={8,3,2,5}
a.intersection(b)

a={2,6,9,5}
b={8,3,2,5}
a.difference(b)

a={2,6,9,5}
b={8,3,2,5}
a.difference(a)

b={8,3,2,5}
{4}.issubset(b)

b={8,3,2,5}
{3}.issubset(b)

{8,3,2,5}.issuperset({2})

int(2.5)

int(True)

int('ab')

int('123')

int([1,2,3])

int({2,3})

float(2)

float(2.2)

float(False)

float({2:3})

float('123')

bool(0)

bool(1.2)

bool(1+2j)

bool('123')

bool(0)

bool('abc')

complex(2)

complex('2')

complex('2','3')

complex('2',3)

complex(4j,8j)

complex({2:3})

str(420)[2]

str(23)

str('abc')

str([3,4])

str((4,5))

str({2,3,4,3})

str({'a':20,'b':40})

list(2)

list([2,3])

list('#')



list({2,4,5,6,7,2})

list({'a':2,'b':4})

tuple(4,)

tuple('ram')

tuple([3,4])

tuple({1,2,3})

tuple({'a':20,'b':40})

dict('23')

dict(['34',[6,7]])

dict(('77',['a','b'],{55,77}))

dict(('77',['a','b','c'],{55,66,77}))

len(str(024))

len(str( 34))

len(str(123))

val=100
if val==100:
  val=val+100
  print(val)

if 1:
  print('inside if')
else:
  print('inside else')

s=3
if s>=3:
  print('inside if')
if s<=3:
  print('inside second if')
else:
  print('inside else')

s='lakshitha'
if s[0]=='l':
  print('available in 0 index')
elif s[2]=='0':
  print('available in 2 index')
elif s[5]=='t':
  print('available in 1 index')
else:
  print('not available')

var1=20
var2=30
if var1>var2:
  print(f'{var1} is greater')
else:
  print(f'{var2} is greater')

a=110
b=90
c=50
d=40
if a>b:
  if a>c:
    print('a is greater')
  elif(b>c) and (b>d):
    print('b is greater')
  elif c>d:
    print('c is greater')
else:
  print(' d is greater')

a=0
b=10
c=20
if a>b:
  if a>c:
    print('a is greater')
else:
  print('c is greater')

s='sunday'
for a in s:
  print(a)

s={'a':100,10:20,'c':40}
for key in s:
  print(s[key])

r=[40,'ram',[20,10],200]
for a in r:
  print(a)

r={3:4,9:20,100:200}
for b in r:
  print(b)

l=[4,5,6]
for num in l:
  print(num)
  for num in l:
    print(num)

num=10
while(num!=21):
  print(num)
  num+=1

num=0
while num!=3:
  print(num)
  number=7
  while number!=10:
    print(number)
    number+=1
  num+=1

var='ram'
for l in var:
  print(l)
else:
  print('not')

num=10
while num!=32:
  print(num)
  num=num+2
else:
  print('it is done')

s='ram laksh'
for ch in s:
  if (ch=='a'):
    break
  else:
    print(ch)

s='Hello world'
for ch in s:
  if ch=='':
    pass
  else:
    print(ch)
print('done')

#clone operations copy
 l=[2,3,4,5]
 c=l
 l[0]=8
 print(l is c)
 print(id(l))
 print(id(c))
 print(id(c[0]))

# shallow copy using slicing
l=[420,45,34,56]
c=l[::]
l[0]=4
print(l)
print(l[1] is c[1])
print(c)
print(l is c)

# in built copy
l=[420,45,34,56]
c=l.copy()
print(l is c)
l[0]=4
print(c)
print(l)
print(l[1] is c[1])

import copy
l=[23,45,34,21,47,89]
c=copy.copy(l)
l[2]=17
print(l)
print(c)
print(id(l))
print(id(c))
print( l is c)
print(l[0] is c[0])

import copy
l=[23,45,34,21,47,89]
c=copy.deepcopy(l)
l[2]=17
print(l)
print(c)
print(id(l))
print(id(c))
print( l is c)
print(l[0] is c[0])

print(10,13,15,127,189,sep='@')

